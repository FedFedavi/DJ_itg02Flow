import logging
import requests
from django.conf import settings

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logger = logging.getLogger(__name__)

API_TOKEN = "7792869223:AAHnV8lAFD0TiD2EhHYWFGc-ecLJfvoqiS4"
TELEGRAM_API_URL = f"https://api.telegram.org/bot{API_TOKEN}/sendMessage"

def notify_customer_sync(order_id):
    """ –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ Telegram. """
    from main.models import Order  # –õ–æ–∫–∞–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

    try:
        order = Order.objects.select_related('customer').prefetch_related('products').get(pk=order_id)

        print(f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–∫–∞–∑ #{order.id}")  # –û—Ç–ª–∞–¥–∫–∞
        logger.info(f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–∫–∞–∑ #{order.id}")

        if not order.customer or not order.customer.telegram_id:
            print(f"–£ –∑–∞–∫–∞–∑—á–∏–∫–∞ {order.customer} –Ω–µ—Ç Telegram ID.")  # –û—Ç–ª–∞–¥–∫–∞
            logger.warning(f"–£ –∑–∞–∫–∞–∑—á–∏–∫–∞ {order.customer} –Ω–µ—Ç Telegram ID.")
            return

        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –∑–∞–∫–∞–∑–∞
        products = order.products.all()
        if not products.exists():
            print(f"–ó–∞–∫–∞–∑ #{order.id} –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å—ë —Ä–∞–≤–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º!")  # –û—Ç–ª–∞–¥–∫–∞
            logger.warning(f"–ó–∞–∫–∞–∑ #{order.id} –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è!")

        product_list = "\n".join([f"{p.name} - {p.price} ‚ÇΩ" for p in products])
        total_price = sum([p.price for p in products])

        message = (
            f"üõí *–ó–∞–∫–∞–∑ #{order.id}*\n"
            f"üì¶ *–ü—Ä–æ–¥—É–∫—Ç—ã:*\n{product_list or '–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤'}\n"
            f"üí∞ *–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:* {total_price} ‚ÇΩ\n"
            f"üìÖ *–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞:* {order.created_at.strftime('%d.%m.%Y')}\n"
            f"üìç *–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:* {order.delivery_address or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
            f"üìù *–°—Ç–∞—Ç—É—Å:* {order.get_status_display()}"
        )

        print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {message}")  # –û—Ç–ª–∞–¥–∫–∞
        logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {message}")

        response = requests.post(
            TELEGRAM_API_URL,
            json={"chat_id": order.customer.telegram_id, "text": message, "parse_mode": "Markdown"}
        )

        if response.status_code == 200:
            print(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {order.customer.telegram_id}")  # –û—Ç–ª–∞–¥–∫–∞
            logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {order.customer.telegram_id}")
        else:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.status_code}, {response.text}")  # –û—Ç–ª–∞–¥–∫–∞
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.status_code}, {response.text}")

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")  # –û—Ç–ª–∞–¥–∫–∞
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
